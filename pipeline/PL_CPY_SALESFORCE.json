{
	"name": "PL_CPY_SALESFORCE",
	"properties": {
		"activities": [
			{
				"name": "ACT_CPY",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONTROL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "concat(@pipeline().parameters.query,@{formatDateTime(activity('LOOKUP_CONTROL').output.firstRow.LastLoadDate,'yyyy-MM-ddTHH:mm:ssZ')})",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE from [@{pipeline().parameters.schema}].[STG_@{pipeline().parameters.table}]",
							"type": "Expression"
						},
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_SALESFORCE",
						"type": "DatasetReference",
						"parameters": {
							"objectName": {
								"value": "@pipeline().parameters.sfObject",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_SQLDB",
						"type": "DatasetReference",
						"parameters": {
							"schema": {
								"value": "@pipeline().parameters.schema",
								"type": "Expression"
							},
							"table": {
								"value": "STG_@{pipeline().parameters.table}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "LOOKUP_CONTROL",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM [@{pipeline().parameters.schema}].[STG_CONTROL_TABLE] WHERE [SourceObject] = '@{pipeline().parameters.table}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_SQLDB_CONTROL",
						"type": "DatasetReference",
						"parameters": {
							"schema": {
								"value": "@pipeline().parameters.schema",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "UPDATE_CONTROL",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ACT_CPY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "dbo.salesForceControlProc",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Object": {
							"value": {
								"value": "@pipeline().parameters.table",
								"type": "Expression"
							},
							"type": "String"
						},
						"schema": {
							"value": {
								"value": "@pipeline().parameters.schema",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"schema": {
				"type": "string",
				"defaultValue": "C0001"
			},
			"table": {
				"type": "string",
				"defaultValue": "OPPORTUNITY_FIELD_HISTORY"
			},
			"sfObject": {
				"type": "string",
				"defaultValue": "OpportunityFieldHistory"
			},
			"query": {
				"type": "string",
				"defaultValue": "SELECT Id, IsDeleted, OpportunityId, CreatedById, CreatedDate, Field, OldValue, NewValue from OpportunityFieldHistory where CreatedDate > "
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}